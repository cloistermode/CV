[
["index.html", "Övning i XML/DTD 1 Inledning", " Övning i XML/DTD Yoshiko Nordeborg Björn Ekström 1 Inledning Den här övningen syftar till att ge en inledande förståelse till XML, Extensible markup language. Du kommer att lära dig: Hur XML-kod skrivs och kontrolleras. Vad välformad XML innebär. Vad giltig XML innebär. Hur du kan utöka en XML-fil och hålla den välformad och giltig. Lycka till! "],
["att-skriva-xml-kod.html", "2 Att skriva XML-kod 2.1 Skapa en XML-fil 2.2 Börja koda! 2.3 Kontrollera koden", " 2 Att skriva XML-kod Vi inleder med att skapa en fil för att sedan börja koda XML. Därefter kommer vi att kontrollera att koden är korrekt skriven. 2.1 Skapa en XML-fil Först skapar du en mapp någonstans på din dator. God praxis är att inte döpa mappar och filer till namn som innehåller å, ä, ö eller mellanslag. Därefter öppnar du EditiX eller XMLSpear. Om du använder skolans datorer hittar du dessa program via Start-menyn -&gt; HB -&gt; Developer Tools. Forsättningsvis kommer instruktionerna skilja sig något beroende på vilket av programmen du använder. Håll därför koll på rubrikerna. 2.1.1 EditiX Först försäkrar du dig om att kodningschemat är UTF-8 genom att klicka File -&gt; Encoding -&gt; UTF-8. Sedan skapar du en ny XML-fil genom att klicka File -&gt; New document. Välj därefter Standard XML document i det lilla fönstret New document och klicka OK. Ett nytt dokument öppnas i editorn. På första raden ska det stå: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; Filen har dock inte sparats än. Du måste därför döpa filen och bestämma var du vill spara den. Klicka File -&gt; Save as och spara filen i den mapp som du har skapat. Kontrollera att XML document (*.xml) är valt som filtyp. 2.1.2 XMLSpear Skapa en ny fil genom att klicka File -&gt; New. Välj XML File som &quot;Document type&quot; i det lilla fönstret New Document och klicka OK. Ett nytt dokument öppnas i editorn. På första raden ska det stå: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; Filen har dock inte sparats än. Du måste därför döpa filen och bestämma var du vill spara den. Klicka File -&gt; Save as. Det ska då komma upp en Save As-ruta. Klicka på knappen Options… och kontrollera att File Encoding är satt till UTF-8. Spara filen i den mapp som du har skapat. Kontrollera att XML document (*.xml) är valt som filtyp. 2.2 Börja koda! Du kan se i fliken ovan dokumentet att den har fått namnet du valt. Om du ställer muspekaren på filnamnet så visas också var filen är sparad. På så sätt kan du skilja på filer med samma namn sparade i olika mappar men du bör för säkerhets skull undvika att döpa flera filer med samma namn. Den allra första raden högst upp i dokumentet ska du inte röra, det är den så kallade XML-deklarationen. Inte ens ett mellanslag får förekomma före den. Kopiera koden nedan och klistra in i din XML-editor. Se till XML-deklarationen inte förekommer två gånger. &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;collection&gt; &lt;book id=&quot;a1&quot;&gt; &lt;isbn&gt;0385&lt;/isbn&gt; &lt;title&gt;The Da Vinchi Code&lt;/title&gt; &lt;author sex=&quot;male&quot;&gt; &lt;gname&gt;Dan&lt;/gname&gt; &lt;fname&gt;Brown&lt;/fname&gt; &lt;/author&gt; &lt;pages&gt;454 sidor&lt;/pages&gt; &lt;/book&gt; &lt;/collection&gt; Spara sedan filen igen. Nu har din XML-fil innehåll men är än så länge inte länkad till en DTD. Läs mer om XML-deklarationen och kommentartaggen på w3schools.com's XML tutorial. 2.3 Kontrollera koden När man kodar är det viktigt att tänka på att koden är korrekt. Därför ska vi nu se till att den är det. 2.3.1 EditiX Med Ctrl + K aktiveras EditiX:s XML-kontrollfunktion. Ser du något felmeddelande av EditiX i nedersta delen av editorn? Om så är fallet så bryter du mot någon XML-regel och därmed är filen inte välformad. Försök att rätta till eventuella problem innan du går till nästa steg. Be om hjälp av en lärare eller av kurskamrater om du behöver. Spara och tryck Ctrl + K igen för att kontrollera koden på nytt. 2.3.2 XMLSpear Nederst under kodfältet finns en flik som heter &quot;Problems&quot;. Om allting är som det ska så visas Document is wellformed XML. I annat fall dyker felmeddelanden upp där. Om så är fallet så bryter du mot någon XML-regel och därmed är filen inte välformad. Försök att rätta till eventuella problem innan du går till nästa steg. Be om hjälp av en lärare eller av kurskamrater om du behöver. "],
["valformad-xml.html", "3 Välformad XML 3.1 Bryt mot reglerna!", " 3 Välformad XML Nu har du en välformad XML-fil. Du ska nu öppna filen i en webbläsare (Firefox). Det finns två sätt att öppna filen i webbläsaren. Går du till den mapp du skapat och högerklicka på filnamnet. I menyn som kommer upp väljer du Öppna med -&gt; Firefox. Öppna webbläsaren. Använd Ctrl + O välj sedan filen genom att bläddra till rätt mapp. Hur ser filen ut i webbläsaren? Inget felmeddelande heller? Nej. Filen är ju välformad. 3.1 Bryt mot reglerna! Innan vi tittar närmare på giltighet kollar vi närmare välformadhet, det vill säga XML:s allmänna regler. Nu ska du prova att göra vanliga fel, regelbrott, för att se hur XML-redigeraren och webbläsaren reagerar. Byt ut c i början av starttaggen för rotelementet till C, en versal. Spara filen. Kontrollera koden. Vad säger programmet? Vad händer när filen öppnas i webbläsaren? Varför blir det som det blev? Du kan rätta och spara filen igen. Uppdatera webbläsaren. Radera något tecken i en av taggarna, till exempel / eller &lt; eller någon bokstav. Spara filen. Kör kontrollen. Vad säger EditiX/XMLSpear? Vad händer när filen öppnas (eller bara uppdateras) i webbläsaren? Varför blir det som det blir? Du kan rätta och spara filen igen. Uppdatera webbläsaren. Radera en start- eller sluttagg helt. Spara filen. Kör kontroll. Vad säger EditiX/XMLSpear? Vad händer när filen öppnas (eller bara uppdateras) på webbläsaren? Varför blir det som det blir? Du kan rätta och spara filen igen. Uppdatera webbläsaren. Den här gången provar vi ett felaktigt nästlande. Du flyttar author-elementets sluttagg till framför fname-elementets sluttagg. Spara filen. EditiX kan börja klaga innan sparandet. Kör kontroll. Vad säger EditiX/XMLSpear? Uppdatera webbläsaren för att se vad som händer. Varför blir det som det blir? Rätta filen i editorn igen och uppdatera webbläsaren. "],
["giltig-xml.html", "4 Giltig XML 4.1 Bryt mot reglerna!", " 4 Giltig XML Vid det här laget har du lärt dig hur ett fel kan ser ut i EditiX/XMLSpear och en webbläsare. Dessvärre kan ett fel synas enbart i webbläsaren också, men detta kommer vi ta upp i samband med SKOS. Lägg nu till en länk till en DTD-fil, books.dtd, i XML-filen. Dokumenttyp-deklarationen ska skrivas in i XML-filen efter xml-deklarationen på det här viset: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE collection SYSTEM &quot;books.dtd&quot;&gt; Spara XML-filen i XML-redigeraren. Vad säger den? Vad säger webbläsaren? Om du använder XMLSpear: Precis ovanför koden finns lite olika alternativ. Klicka i cirkeln som står före &quot;dtd&quot; och därefter på den gröna bocken lite till vänster om den. Vad händer? Klicka på Cancel för att stänga ned rutan som dyker upp. Felmeddelandena du får nu beror på att du säger till programmet att följa reglerna som finns i filen books.dtd, men programmet kan inte hitta den filen. Därför måste du ladda ner filen books.dtd från kursaktiviteten i Ping Pong (Dokument -&gt; Tesauruskonstruktion -&gt; XML/DTD/SKOS-filer) och spara den i samma mapp som XML-filen. Om DTD-filen ligger i samma mapp som XML-filen så räcker det med filnamnet för att editorn ska hitta den. Kontrollera på nytt så att inget felmeddelande genereras. Om du använder XMLSpear så behöver du stänga filen och öppna den på nytt för att programmet ska &quot;förstå&quot; att den kan hitta DTD-filen. Uppdatera också webbläsaren. Visas XML-filen korrekt? Om du inte får några felmeddelanden är XML-filen både välformad och giltig. 4.1 Bryt mot reglerna! Nu ska vi prova några olika sätt att bryta mot reglerna i DTD:n. Ta bort hela title-elementet. Spara. Kontrollera vad som händer i EditiX/XMLSpear (med den gröna bocken i XMLSpear eller Ctrl + K i EditiX) och i webbläsaren. Fundera varför det blir som det blir genom att öppna DTD-filen och tolka reglerna/definitionerna där. Lägg tillbaka title-elementet efter isbn-elementet och kontrollera på nytt. Ta bort hela isbn-elementet. Spara. Kontrollera vad som händer i EditiX/XMLSpear och i webbläsaren. Varför blir det som det blev? Lägg tillbaka isbn-elementet mellan book- och title-elementen och spara/uppdatera. Skriv in ett title-element till efter det andra title-elementet. Spara. Kontrollera vad som händer i EditiX och i webbläsaren. Varför blir det som det blir? Rätta till och spara/uppdatera. Byt plats på isbn-elementet och title-elementet. Spara och kontrollera. Varför blir det som det blir? Rätta till och spara/uppdatera. Lägg till ett nytt page-element efter det ursprungliga page-elementet. Spara och kontrollera. Varför blir det som det blir? Lägg till ett dimension-element med något värde i efter något page-element. Spara och kontrollera. Varför blir det som det blir? Var kan du flytta dimension-elementet utan att få ett felmeddelande? Ta bort värdet av page-elementet, det vill säga &quot;454 sidor&quot;. Spara och kontrollera. Varför blir det som det blir? Rätta till och spara/uppdatera. Ta bort attributet i book-elementets starttagg. Spara och kontrollera. Varför blir det som det blir? Rätta till och spara/uppdatera. Ta bort attributet i author-elementets starttagg. Spara och kontrollera. Varför blir det som det blir? Rätta till och spara/uppdatera. "],
["utoka-filens-innehall.html", "5 Utöka filens innehåll", " 5 Utöka filens innehåll Fortsätt nu att behålla filen giltig och välformad medan du utökar filens innehåll. Lägg till ett nytt author-element. Var försiktig med ordning av gname- och fname-element. Spara och kontrollera. Skapa ett nytt book-element. Hitta någon katalogpost och skapa ett book-element efter den, eller hitta en titel och övrigt innehåll. Utöka filen tills du behärskar välformighet och giltighet i XML. "]
]
